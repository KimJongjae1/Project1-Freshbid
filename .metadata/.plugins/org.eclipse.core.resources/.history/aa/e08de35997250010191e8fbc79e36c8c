import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Queue;
import java.util.StringTokenizer;

public class Solution {
	 static List<List<Integer>> list;
	 static int[][] dp;
     static int[] a= {1<<1,1<<2,1<<3,1<<4};//ABCD
	 
	 public static void main(String[] args) throws IOException{
		   BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		   int T=Integer.parseInt(br.readLine());
		   for(int t=1;t<=T;t++) {
			   
			   String str=br.readLine();
			   dp=new int[16][str.length()];
			 
			   char ham=str.charAt(0);
			   
			   for(int i=1;i<=15;i++) {
				   if((i&a[0])!=0) {
					   int num=select(ham);
					   if((i&num)!=0) {
						   dp[i][0]=1; 
					   }  
				   }
			   }
			   
			   for(int k=0;k<str.length()-1;k++) {
				   for(int i=1;i<=15;i++) {
					   if(dp[i][k]==0) continue;
					   char stand=str.charAt(k+1);
					   int s=select(stand);
				      for(int q=1;q<=15;q++) {
				    	  if((i&q)!=0) {
				    		  if((s&q)!=0) {
				    			  dp[q][k+1]+=dp[i][k];
				    			  dp[q][k+1]%=1000000007;
				    		  }
				    	  }
				      }
				   }
			   }
			   
			   int ans=0;
			   for(int i=1;i<=15;i++) {
				   ans+=dp[i][str.length()-1];
			   }
			   System.out.println(ans%1000000007);
		
		   }
	 }
	 public static int select(char st) {
		 switch(st) {
		 	case 'A':
			  return a[0];
			 
		   	case 'B':
			 return a[1]; 
			 
			case 'C':
			 return a[2]; 
  
			case 'D':
			 return a[3]; 
		     
		   
		   }
		 return 0;
	 }
}
